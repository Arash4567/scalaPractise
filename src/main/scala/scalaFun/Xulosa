Class (Sinf) -> o`zgaruvchilar (variablelar (var)), qiymati o`zgarmas o`zgaruvchilarlar (value (val)) hamda
ma`lum bir vazifa bajaruvchi kod bloklari (methodlar (def)) lar majmuasi (kolleksiyasi).
Object (Obyekt) -> Classlarning namunasi (examplyari (instance)) hisoblanadi. Ko`z bilan ko`rib qo`l bilan tutib
biladovin ixtiyoriy narsa!

Class bilan Object larni farqi Classlarni bir mashinani qurish instruksiyasi dab qarasak,
Objectlarni shu instruksiya yordamida yaratilgan avtomobil dab tushunish mumkin.

Classlar parametr oladi, objectlarda asa parametr olmidi!

Classni (Sinf) namunasi (instance) new kalit so`zi bilan yasaladi
-> Class
class Follower(login: String, password: String){
    def thankYou(username: String): Unit = println(s"Xush kelibsiz, $username, Tashrifingizdan minnatdormiz!")
}
-> Class namunasi (instance)
val newFollower1 = new Follower("jack0777", "noP@ssword4567")

Classdagi polyalarga (fieldlarga) murojaat qilish uchun uni oldin namunasini (instanceni) yaratib olishimiz garak
val newFollower2 = new Follower("mark0999", "noP@ssword1234")
Keyin namuna (instance) objectdagi ixtiyoriy polya (field) ni "." (nuqta) bilan murojaat qilsak bo`ladi
newFollower2.thankYou("Mark")
Yuqoridagi Class (Sinf) da bizar login va password dagan parametrlarni e'lon qildik, lekin bularni bizar uni namunasi
(isntance) bo`lgan newFollower1 va newFolloer2 da "." (nuqta) bilan chaqirib bilmimiz. Shu parametrlarni chaqirish
uchun bizar vu parametrlarni var yoki val kalit so`zlari bilan ifodalashimiz garak adi.
-> Class
class Follower(login: String, password: String){
    def thankYou(username: String): Unit = println(s"Xush kelibsiz, $username, Tashrifingizdan minnatdormiz!")
}
-> Class namunasi (instance)
val newFollower3 = new Follower("jack0777", "noP@ssword4567")

println(newFollower3.login)
println(newFollower3.password)

Class (Sinf) larda polyalar (fieldlar) 3 xil go`rinishda e`lon qilinadi
1. public -> Scalada bundin zaxiralangan so`z yo`q, ya`ni public method yoki o`zgaruvchilarni do`g`ridan do`g`ri e`lon
qilamiz: Masalan:
class Follower(login: String, password: String){
    def thankYou(username: String): Unit = println(s"Xush kelibsiz, $username, Tashrifingizdan minnatdormiz!")
}
-> Berda thankYou() metodi public qilib e`lon qilindi
bu polyaga ya'ni, metodga bizar Follow sinfini namunasi (instance) da "." (nuqta) bilan murajaat qilib bilamiz. Sinfdagi
bu polyaga bizar uning ixtiyoriy namunasi (instance) da ruxsat (access) olib bilamiz.
2. private -> Shaxsiy val yoki def. Bizar private kalit so`zi bilan e`lon qilingan val yoki deflarga shu faqat Sinf
ichidagi polyalardan va hamroh obyektlardan (Companion Object) ruxsat olib bilamiz.

class Follower {
    private val secretKey: String = "jhsaoihwaejbHJKHhdajksldhkjqweq313"
    def thankYou(username: String): Unit = println(s"Xush kelibsiz, $username, Tashrifingizdan minnatdormiz!")
    def showSecretKey(username: String): Unit = println(s"Sizning maxsus kodingiz: $secretKey")
}

Hamroh objyekt (Companion object)
class Test {
    private val login:String = "jack2345"
}
object Test {
    def printLogin():Unit = println((new Test).login)
}
Test.printLogin()

3. protected -> Ximoyalangan polyalar (fieldlar) var, val yoki def.
Ximoyalangan polyalardan faqat Follower sinfi (class) ning subclassi da foydalanish mumkin

class Follower(){
    private val secretKey: String = "jhsaoihwaejbHJKHhdajksldhkjqweq313"
    protected val login: String = "Hello4567"
    def thankYou(username: String): Unit = println(s"Xush kelibsiz, $username, Tashrifingizdan minnatdormiz!")
    def showSecretKey(username: String): Unit = println(s"Sizning maxsus kodingiz: $secretKey")
}
class NewFollower extends Follower {
    def printLogin():Unit = println(s"Sizning loginingiz: $login")
}
val newUser = new NewFollower
newUser.printLogin()


